/* Copyright 2017 Quip */

@import "base.less";

@backgroundInverse: var(--quipBackgroundInverse, 0, 0, 0);
.cardContainer {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    left: 0;
    padding: 2px;
    border-radius: 3px;

    .chevron {
        position: absolute;
        cursor: pointer;
        display: flex;
        height: 25px;
        width: 25px;
        z-index: 1;
        top: 8px;
        right: -1px;
        border: 0;
        padding: 0;
        background: transparent;
    }

    .chevron:focus {
        border: 2px solid ~"rgb(var(--quipBlue))";
    }

    &.header .chevron {
        stroke: ~"rgba(@{backgroundInverse}, 0.2)";
    }
}

.card {
    display: flex;
    flex-direction: column;
    position: absolute;
    border-radius: 3px;
    cursor: default;

    .titleRow {
        display: flex;
    }

    &.header .titleRow {
        align-items: center;
    }

    &.header .remoteEditor article .content {
        color: #333;
        font-weight: bold;
    }

    .draggable {
        cursor: grab;
        position: relative;

        &:active {
            cursor: grabbing;
        }
    }

    .draggableHeader {
        font-size: 15px;
        padding-right: 3px;
        stroke: ~"rgba(@{backgroundInverse}, 0.2)";
    }

    .commentWrapper {
        height: 20px;
        text-align: right;
    }

    .realCommentWrapper {
        display: inline-block;
        width: 15px;
        height: 13px;
        margin: 0 5px 0 0;
    }

    .realCommentWrapperHide {
        visibility: hidden;
    }

    .remoteEditor {
        flex: 1;
        cursor: text;
        word-break: break-word;
        margin-right: 25px;
        -webkit-line-break: after-white-space;
    }

    .remoteEditor article {
        padding: 6px 6px 5px 10px;
    }

    &.header {
        .remoteEditor article {
            padding: 5px 30px 2px 0;
        }

        :global article .section[data-section-type="0"] > .content {
            border-radius: 3px;
            padding: 3px;
            padding-left: 5px;
            box-shadow: 0 0 0 1px ~"rgba(@{backgroundInverse}, 0)" inset;
        }

        &:hover,
        &.isFocused {
            :global article .section[data-section-type="0"] > .content {
                box-shadow: 0 0 0 1px ~"rgba(@{backgroundInverse}, 0.1)" inset;
            }
        }
    }
}

.dragging {
    cursor: grabbing;
}
